{
	"name": "Remove_duplicated_Transform_CSV",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ProductsRawSource",
						"type": "DatasetReference"
					},
					"name": "cleancolumnscontainer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "1_nonduplicated_products",
						"type": "DatasetReference"
					},
					"name": "copynonuplicated"
				}
			],
			"transformations": [
				{
					"name": "aggregateremoveduplicated"
				},
				{
					"name": "derivedcolumntransform"
				},
				{
					"name": "selectusefullcolumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          product_id as string,",
				"          product_name as string,",
				"          category as string,",
				"          discounted_price as string,",
				"          actual_price as string,",
				"          discount_percentage as string,",
				"          rating as string,",
				"          rating_count as string,",
				"          about_product as string,",
				"          user_id as string,",
				"          user_name as string,",
				"          review_id as string,",
				"          review_title as string,",
				"          review_content as string,",
				"          img_link as string,",
				"          product_link as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 10,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'source_filename',",
				"     wildcardPaths:['*.csv']) ~> cleancolumnscontainer",
				"derivedcolumntransform aggregate(groupBy(product_id),",
				"     title = first(title),",
				"          category = first(category),",
				"          price = first(price),",
				"          rating = first(rating),",
				"          review_count = first(review_count),",
				"          description = first(description),",
				"          image_url = first(image_url),",
				"          product_url = first(product_url),",
				"          source_filename = first(source_filename)) ~> aggregateremoveduplicated",
				"selectusefullcolumns derive(price = toFloat(replace(replace(price,'â‚¹',''), ',', '')),",
				"          review_count = toInteger(replace(review_count, ',', ''))) ~> derivedcolumntransform",
				"cleancolumnscontainer select(mapColumn(",
				"          product_id,",
				"          title = product_name,",
				"          category,",
				"          price = actual_price,",
				"          rating,",
				"          review_count = rating_count,",
				"          description = about_product,",
				"          image_url = img_link,",
				"          product_url = product_link,",
				"          source_filename",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectusefullcolumns",
				"aggregateremoveduplicated sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          product_id as string,",
				"          title as string,",
				"          category as string,",
				"          price as string,",
				"          rating as string,",
				"          review_count as string,",
				"          description as string,",
				"          image_url as string,",
				"          product_url as string",
				"     ),",
				"     rowUrlColumn:'source_filename',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          product_id,",
				"          title,",
				"          category,",
				"          price,",
				"          rating,",
				"          review_count,",
				"          description,",
				"          image_url,",
				"          product_url",
				"     )) ~> copynonuplicated"
			]
		}
	}
}